(function() {var implementors = {};
implementors["new_channel"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"new_channel/struct.SendError.html\" title=\"struct new_channel::SendError\">SendError</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"new_channel/enum.TrySendError.html\" title=\"enum new_channel::TrySendError\">TrySendError</a>&lt;T&gt;",synthetic:false,types:["new_channel::err::TrySendError"]},{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"new_channel/struct.SendError.html\" title=\"struct new_channel::SendError\">SendError</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"new_channel/enum.SendTimeoutError.html\" title=\"enum new_channel::SendTimeoutError\">SendTimeoutError</a>&lt;T&gt;",synthetic:false,types:["new_channel::err::SendTimeoutError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"new_channel/struct.RecvError.html\" title=\"struct new_channel::RecvError\">RecvError</a>&gt; for <a class=\"enum\" href=\"new_channel/enum.TryRecvError.html\" title=\"enum new_channel::TryRecvError\">TryRecvError</a>",synthetic:false,types:["new_channel::err::TryRecvError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"new_channel/struct.RecvError.html\" title=\"struct new_channel::RecvError\">RecvError</a>&gt; for <a class=\"enum\" href=\"new_channel/enum.RecvTimeoutError.html\" title=\"enum new_channel::RecvTimeoutError\">RecvTimeoutError</a>",synthetic:false,types:["new_channel::err::RecvTimeoutError"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
